{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/github/repository/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "GitHub repository web component",
          "name": "GitHubRepository",
          "members": [
            {
              "kind": "method",
              "name": "_getAttributes",
              "description": "Generate variables at `this.[attribute-name]` for each attribute on the element"
            },
            {
              "kind": "field",
              "name": "attrs",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "repo",
              "type": {
                "text": "object"
              },
              "default": "{}"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "github-repository",
          "summary": "Native web component which shows a GitHub repository's content. Can use local data, \nfetch data from the GitHub rest API, or use a combination of both.",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GitHubRepository",
          "declaration": {
            "name": "GitHubRepository",
            "module": "src/github/repository/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "github-repository",
          "declaration": {
            "name": "GitHubRepository",
            "module": "src/github/repository/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/github/user.js",
      "declarations": [
        {
          "kind": "class",
          "description": "GitHub repository UI component\n All props are attributes and should be the same content as the GitHub API\n endpoint for getting a repository",
          "name": "GitHubUser",
          "members": [
            {
              "kind": "method",
              "name": "_parseReposAttribute",
              "parameters": [
                {
                  "name": "reposAttr",
                  "description": "String of GitHubRepository data",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Parses a string, which should be a JSON stringified array of GitHubRepository \n objects or strings. If a string, it should be the `full_name` of the repository\n and `fetch=true` will be an attribute on the repository component",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "_getAttributes",
              "description": "Generate variables at `this.[attribute-name]` for each attribute on the element"
            },
            {
              "kind": "method",
              "name": "_checkAttributes",
              "description": "Check that required attributes are present, adjusts content as needed"
            },
            {
              "kind": "method",
              "name": "_parseFetch",
              "description": "Fetch user data from GitHub API and parse out \n the content needed for this component. Either adds an error\n or adds the parsed content to the element's attributes"
            },
            {
              "kind": "method",
              "name": "_render"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "User's GitHub login",
              "name": "login"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "URL to user's avatar",
              "name": "avatar_url"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "User's name",
              "name": "name"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "when true, fetches user from GitHub api",
              "name": "fetch"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "alias for `login`",
              "name": "username"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "User's biography content",
              "name": "bio"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "number of people user is following",
              "name": "following"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "number of followers",
              "name": "followers"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "JSON stringified array of repositories",
              "name": "repos"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "github-user",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GitHubUser",
          "declaration": {
            "name": "GitHubUser",
            "module": "src/github/user.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "github-user",
          "declaration": {
            "name": "GitHubUser",
            "module": "src/github/user.js"
          }
        }
      ]
    }
  ]
}
