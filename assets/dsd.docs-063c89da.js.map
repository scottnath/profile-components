{"version":3,"file":"dsd.docs-063c89da.js","sources":["../../src/github/dsd.docs.mdx"],"sourcesContent":["import { Meta, Title, Primary, Source, Stories } from '@storybook/blocks';\n\n<Meta isTemplate />\n\n<Title />\n\nBoth GitHub components can be implemented via Declarative Shadow DOM using methods exported from the `github-utils.js` file.\n\n\n## Server Side Rendering HTML in Node.js\n\n<Source code={`\n// import from npm module\nimport { dsd } from 'profile-components/github-utils';\n\nconst repos = JSON.stringify([\n  'scottnath/profile-components',\n  'storydocker/storydocker'\n]);\n\nconst generatedTemplate = await dsd({\n  login: 'scottnath',\n  avatar_url: profilePic.src,\n  repos\n},true);\n\n/**\ngeneratedTemplate contains:\n<template shadowrootmode=\"open\">\n  <styles>(...css styles for GitHub component)</styles>\n  <section (...rest of generated HTML)</section>\n</template>\n*/\n\nconst componentHTML = \\`<github-user>\\${generatedTemplate}</github-user>\\`;\n`} language='js' />\n\n## Server side render in an Astro component\n\n<Source code={`\n---\nimport {dsd} from 'profile-components/github-utils';\n\nconst repos = JSON.stringify(['scottnath/profile-components', 'storydocker/storydocker']);\nconst declaredDOM = await dsd({\n  login: 'scottnath',\n  repos\n},true)\n---\n\n<github-user\n  data-theme=\"light_high_contrast\"\n  set:html={declaredDOM}>\n</github-user>\n`} language='jsx' />\n\n## Client side rendering via unpkg\n\n<Source code={`\n\n<!-- add empty elements to HTML -->\n<github-repository></github-repository>\n<hr />\n<github-user></github-user>\n\n<script type=\"module\">\n  // import from unpkg\n  import {\n    user,\n    repo,\n  } from 'https://unpkg.com/profile-components/dist/github-utils.js';\n\n  // repo has it's own DSD method:\n  const dsdRepo = repo.dsd;\n\n  /**\n    * Polyfill for Declarative Shadow DOM which, when triggered, converts\n    *  the template element into actual shadow DOM.\n    * This is only needed when injecting _after_ page is loaded\n    * @see https://developer.chrome.com/docs/css-ui/declarative-shadow-dom#polyfill\n    */\n  const triggerAttachShadowRoots = () => {\n    (function attachShadowRoots(root) {\n      root\n        .querySelectorAll('template[shadowrootmode]')\n        .forEach((template) => {\n          const mode = template.getAttribute('shadowrootmode');\n          const shadowRoot = template.parentNode.attachShadow({ mode });\n          shadowRoot.appendChild(template.content);\n          template.remove();\n          attachShadowRoots(shadowRoot);\n        });\n    })(document);\n  };\n\n  /**\n    * Uses the \"dsd\" method to generate DSD, add the string of DSD content\n    *  to the element, then trigger the polyfill to convert the template\n    */\n  const injectDSD = async () => {\n    const dsdHTML = await dsd({ username: 'scottnath' }, true);\n    document.querySelector('github-user').innerHTML = dsdHTML;\n    // now that the HTML is async-created, the polyfill can convert it\n    triggerAttachShadowRoots();\n  };\n  injectDSD();\n\n  /**\n    * Uses the \"dsdRepo\" method to generate DSD, add the string of DSD content\n    *  to the element, then trigger the polyfill to convert the template\n    */\n  const injectRepoDSD = async () => {\n    const dsdHTML = await dsdRepo(\n      { full_name: 'scottnath/profile-components' },\n      true\n    );\n    document.querySelector('github-repository').innerHTML = dsdHTML;\n    // now that the HTML is async-created, the polyfill can convert it\n    triggerAttachShadowRoots();\n  };\n  injectRepoDSD();\n</script>\n`} language='html' />\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Title","Source","MDXContent","MDXLayout"],"mappings":"8XAIA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,EAAG,IACH,KAAM,OACN,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,WAAY,EAClB,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAO,CAAA,CAAE,EAAG;AAAA,EAAMJ,EAAAA,KAAMF,EAAY,EAAG,CACpD,SAAU,CAAC,wGAAyGI,MAAKJ,EAAY,KAAM,CACzI,SAAU,iBACX,CAAA,EAAG,QAAQ,CACb,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,uCACJ,SAAU,uCAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAACG,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBN,SAAU,IACX,CAAA,EAAG;AAAA,EAAMH,MAAKJ,EAAY,GAAI,CAC7B,GAAI,2CACJ,SAAU,0CAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAACG,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMH,MAAKJ,EAAY,GAAI,CAC7B,GAAI,kCACJ,SAAU,iCAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAACG,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiEN,SAAU,MAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASC,EAAWT,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASU,CAAS,EAAI,OAAO,OAAO,CAAE,EAAER,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOU,EAAYL,EAAAA,IAAKK,EAAW,OAAO,OAAO,CAAE,EAAEV,EAAO,CAC1D,SAAUK,EAAAA,IAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}