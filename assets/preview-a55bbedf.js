import{s as a}from"./chunk-757FFUVQ-c8ec857d.js";import"./index-356e4a49.js";const l="1.0.0",d="",m=[{kind:"javascript-module",path:"src/github/repository/index.js",declarations:[{kind:"class",description:"GitHub repository web component",name:"GitHubRepository",members:[{kind:"field",name:"attrs",type:{text:"object"},default:"{}"},{kind:"field",name:"repo",type:{text:"object"},default:"{}"},{type:{text:"string"},description:"repository org and name, as in `scottnath/profile-components`",name:"full_name",kind:"field"},{type:{text:"string"},description:"repo name",name:"name",kind:"field"},{type:{text:"string"},description:"repo owner organization's login, found at `<REST_RESPONSE>.organization.login`",name:"org",kind:"field"},{type:{text:"string"},description:"repo description",name:"description",kind:"field"},{type:{text:"string"},description:"programming language used in repo",name:"language",kind:"field"},{type:{text:"string"},description:"number of stars",name:"stargazers_count",kind:"field"},{type:{text:"string"},description:"number of forks",name:"forks_count",kind:"field"},{type:{text:"string"},description:"number of watchers",name:"subscribers_count",kind:"field"},{type:{text:"boolean"},description:"when true, fetches repo from GitHub api",name:"fetch",kind:"field"},{type:{text:"string"},description:"Itemprop content to go with a containing component's itemscope",name:"itemprop",kind:"field"},{type:{text:"string"},description:"Do not include the repo owner or organization",name:"no_org",kind:"field"}],superclass:{name:"HTMLElement"},tagName:"github-repository",summary:`Native web component which shows a GitHub repository's content. Can use local data, 
fetch data from the GitHub rest API, or use a combination of both.`,customElement:!0}],exports:[{kind:"js",name:"GitHubRepository",declaration:{name:"GitHubRepository",module:"src/github/repository/index.js"}},{kind:"custom-element-definition",name:"github-repository",declaration:{name:"GitHubRepository",module:"src/github/repository/index.js"}}]},{kind:"javascript-module",path:"src/github/user/index.js",declarations:[{kind:"class",description:"GitHub user profile web component",name:"GitHubUser",members:[{kind:"field",name:"attrs",type:{text:"object"},default:"{}"},{kind:"field",name:"content",type:{text:"object"},default:"{}"},{type:{text:"string"},description:"User's GitHub login",name:"login",kind:"field"},{type:{text:"string"},description:"URL to user's avatar",name:"avatar_url",kind:"field"},{type:{text:"string"},description:"User's name",name:"name",kind:"field"},{type:{text:"boolean"},description:"when true, fetches user from GitHub api",name:"fetch",kind:"field"},{type:{text:"string"},description:"alias for `login`",name:"username",kind:"field"},{type:{text:"string"},description:"User's biography content",name:"bio",kind:"field"},{type:{text:"string"},description:"number of people user is following",name:"following",kind:"field"},{type:{text:"string"},description:"number of followers",name:"followers",kind:"field"},{type:{text:"string"},description:"JSON stringified array of repositories",name:"repos",kind:"field"}],superclass:{name:"HTMLElement"},tagName:"github-user",summary:`Native web component which shows a GitHub user's profile content. Can use local data, 
fetch data from the GitHub rest API, or use a combination of both.`,customElement:!0}],exports:[{kind:"js",name:"GitHubUser",declaration:{name:"GitHubUser",module:"src/github/user/index.js"}},{kind:"custom-element-definition",name:"github-user",declaration:{name:"GitHubUser",module:"src/github/user/index.js"}}]}],p={schemaVersion:l,readme:d,modules:m},o=[{value:"light",left:"☀️",title:"Light"},{value:"light_colorblind",left:"☀️",title:"Light Protanopia & Deuteranopia"},{value:"light_tritanopia",left:"☀️",title:"Light Tritanopia"},{value:"light_high_contrast",left:"☀️",title:"Light High Contrast"},{value:"dark",left:"🌗",title:"Dark"},{value:"dark_dimmed",left:"🌗",title:"Dark Dimmed"},{value:"dark_colorblind",left:"🌗",title:"Dark Protanopia & Deuteranopia"},{value:"dark_tritanopia",left:"🌗",title:"Dark Tritanopia"},{value:"dark_high_contrast",left:"🌗",title:"Dark High Contrast"}],c={theme:{name:"Theme",description:"Switch themes",defaultValue:"light",toolbar:{icon:"contrast",items:[{value:"",left:"",title:"None"},...o],showName:!0,dynamicTitle:!0}}},u=[(e,t)=>{const s=t.globals.theme;return t.args["data-theme"]=s,e()}];var h={mobile1:{name:"Small mobile",styles:{height:"568px",width:"320px"},type:"mobile"},mobile2:{name:"Large mobile",styles:{height:"896px",width:"414px"},type:"mobile"},tablet:{name:"Tablet",styles:{height:"1112px",width:"834px"},type:"tablet"}};const r={containerMin1:{name:"ContainerMin1: 200px",styles:{width:"200px",height:"100%"}},containerMin2:{name:"ContainerMin2: 300px",styles:{width:"300px",height:"100%"}},containerMin3:{name:"ContainerMin3: 400px",styles:{width:"400px",height:"100%"}}},f={...h,...r},g=["light","dark"],i={},n={};for(const e of Object.keys(r)){i[e]={viewport:e},n[e]={viewport:e};for(const t of g)i[`${t} ${e}`]={viewport:e,theme:t};for(const t of o)n[`primer ${t.value} ${e}`]={viewport:e,theme:t.value}}a(p);const k=c,x=u,w={parameters:{actions:{argTypesRegex:"^on[A-Z].*"},chromatic:{modes:{...i}},controls:{expanded:!0,matchers:{color:/(background|color)$/i,date:/Date$/}},layout:"none",viewport:{viewports:f}}};export{x as decorators,w as default,k as globalTypes};
//# sourceMappingURL=preview-a55bbedf.js.map
