{"version":3,"file":"index-1b6d8a33.js","sources":["../../src/github/helpers/testing.js","../../src/github/repository/content.js","../../src/github/fixtures/index.js","../../src/github/repository/html.js","../../src/github/styles/index.js"],"sourcesContent":["/**\n * @name Testing\n * @module\n * @typicalname testing\n * @description Utility functions used for testing and prototyping components\n * @author @scottnath\n */\n\n/**\n * Generate a mock github api response\n * @param {(GitHubRepository|GitHubUser)} content - mock return data\n * @param {string} type - 'users' or 'repos'\n * @param {number} status - 200 or 404\n * @returns mock response object\n * @function\n */\nexport const generateMockResponse = (content, type='users', status=200) => {\n  let url = `https://api.github.com/${type}/`;\n\n  if (type === 'users') {\n    url += content.login;\n  } else if (type === 'repos') {\n    url += content.full_name;\n  }\n\n  if (status === 404) {\n    return {\n      url,\n      method: 'GET',\n      status: 404,\n      delay: 0,\n      response: {\n        documentation_url: `https://docs.github.com/rest/${type}/${type}`,\n        message: \"Not Found\"\n      },\n    }\n  }\n  return {\n    url,\n    method: 'GET',\n    status: 200,\n    delay: 0,\n    response: content,\n  }\n}","/** @ignore */\nconst githubApi = 'https://api.github.com';\n\n/**\n * Content needed to render a GitHub repository. This is a subset of the `repos` endpoint response\n * @typedef {Object} GitHubRepositoryHTML\n * \n * @property {string} full_name - repository org and name, as in `scottnath/profile-components`\n * @property {string} name - repo name\n * @property {string} [org] - repo owner organization's login, found at `<REST_RESPONSE>.organization.login`\n * @property {string} [description] - repo description\n * @property {string} [language] - programming language used in repo\n * @property {string} [stargazers_count] - number of stars\n * @property {string} [forks_count] - number of forks\n * @property {string} [subscribers_count] - number of watchers\n * @property {string} [error] - error message, if any\n * @memberof GitHubUtils.repo\n */\n\n/**\n * Fetch a GitHub repository's content from the GitHub api\n * @see https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#get-a-repository\n * @param {string} full_name\n * @returns response status 200: {Object} repo; else {Object} error\n * @function\n * @ignore\n */\nexport const fetchRepo = async (full_name) => {\n  const options = {\n    cache: 'no-cache',\n  };\n  const response = await fetch(`${githubApi}/repos/${full_name}`, options);\n  const repoJson = await response.json();\n  return repoJson;\n}\n\n/**\n * Parse a GitHub repository's content. This is a reducer on the endpoint response, \n *  but generally reduces any object to just the data required for the repo component HTML\n * @param {Object} repo - GitHub repository object\n * @returns {GitHubRepositoryHTML}\n * @function\n * @ignore\n */\nexport const parseFetchedRepo = (repo = {}) => {\n  return {\n    full_name: repo.full_name,\n    name: repo.name,\n    org: repo.org || repo.organization?.login || repo.owner?.login,\n    description: repo.description,\n    language: repo.language,\n    stargazers_count: repo.stargazers_count,\n    forks_count: repo.forks_count,\n    subscribers_count: repo.subscribers_count,\n  }\n}\n\n/**\n * Parses and cleans repository content to match what is expected by the repository HTML\n * @param {GitHubRepositoryHTML} content - a content object either from component or GitHub API\n * @param {boolean} [no_org] - if true, remove the `org` attribute from the returned object\n * @returns {GitHubRepositoryHTML} ready for HTML content\n * @function\n * @ignore\n */\nexport const cleanRepoContent = (content, no_org) => {\n  const repo = parseFetchedRepo(content);\n  if (!repo.full_name || !repo.full_name.split('/')[1]) {\n    repo.error = 'Missing repo attribute: `full_name`';\n    return repo;\n  }\n  if (!repo.name) {\n    repo.name = repo.full_name.split('/')[1];\n  }\n  if (!repo.org) {\n    repo.org = repo.full_name.split('/')[0];\n  }\n  if (no_org) {\n    delete repo.org;\n  }\n  if (repo.stargazers_count === '0') delete repo.stargazers_count;\n  if (repo.forks_count === '0') delete repo.forks_count;\n  if (repo.subscribers_count === '0') delete repo.subscribers_count;\n  const r = {};\n  // remove `undefined` values\n  for (const key in repo) {\n    if (repo[key]) r[key] = repo[key];\n  }\n  return r;\n}\n\n/**\n * Generates an object of content for the repository HTML\n * @param {GitHubRepositoryHTML} content \n * @param {boolean} [fetch] \n * @param {boolean} [no_org] \n * @returns {GitHubRepositoryHTML} content ready for HTML, possibly includes fetched content\n * @function\n * @memberof GitHubUtils.repo\n * @name generateContent\n */\nexport const generateRepoContent = async (content, fetch = false, no_org = false) => {\n  const repoFromContent = cleanRepoContent(content, no_org);\n  if (repoFromContent.error) return repoFromContent;\n  let fetched = {};\n  if (fetch) {\n    fetched = await fetchRepo(repoFromContent.full_name);\n    if (fetched.message) {\n      if (fetched.message === 'Not Found') {\n        return { error: `Fetch Error: Repo \"${repoFromContent.full_name}\" not found`};\n      }\n      return { error: `Fetch Error: ${fetched.message}`};\n    }\n    fetched = cleanRepoContent(fetched, no_org);\n  }\n  return Object.assign({}, fetched, repoFromContent);\n}\n","\n// repositories\nexport { default as repoFreeCodeCamp } from './generated/repo--freeCodeCamp-freeCodeCamp.json';\nexport { default as repoProfileComponents } from './generated/repo--scottnath-profile-components.json';\nexport { default as repoScottnathdotcom } from './generated/repo--scottnath-scottnath.com.json';\nexport { default as repoStorydocker } from './generated/repo--storydocker-storydocker.json';\n\n// users\nexport { default as userScottnath } from './generated/user--scottnath.json';\nexport { default as userSindresorhus } from './generated/user--sindresorhus.json';","\n\nimport { intToString } from '../../utils/index.js';\n\n/**\n * GitHub repository HTML generation\n * @param {GitHubRepositoryHTML} content - content needed to render a GitHub repository\n * @returns {string} HTML which represents a GitHub repository\n * @function\n * @memberof GitHubUtils.repo\n */\nfunction html(content) {\n  if (content.error) {\n    return `\n      <div aria-label=\"GitHub repository\" class=\"repo\" itemscope itemtype=\"http://schema.org/Action\">\n        <p itemprop=\"error\">${content.error}</p>\n      </div>\n    `\n  }\n  return `\n    <div aria-label=\"GitHub repository\" class=\"repo\" itemscope itemtype=\"http://schema.org/SoftwareSourceCode\">\n      <a href=\"https://github.com/${content.full_name}\" itemprop=\"codeRepository\">\n        ${content.org ? `\n          <span itemprop=\"maintainer\">${content.org} /</span>\n        ` : ''}\n        <span itemprop=\"name\">${content.name}</span>\n      </a>\n      ${content.description ? `\n        <p itemprop=\"about\">${content.description}</p>\n      ` : ''}\n      <dl aria-label=\"Repository details\">\n        ${content.language ? `\n          <dt data-detail=\"language\" data-language=\"${content.language}\"><span class=\"sr-only\">Language</span></dt>\n          <dd itemprop=\"programmingLanguage\">${content.language}</dd>\n        ` : ''}\n        ${content.stargazers_count ? `\n          <dt data-detail=\"stars\"><span class=\"sr-only\">Stars</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.stargazers_count)}</span><span class=\"sr-only\">${content.stargazers_count}</span></dd>\n        ` : ''}\n        ${content.subscribers_count ? `\n          <dt data-detail=\"watchers\"><span class=\"sr-only\">Watchers</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.subscribers_count)}</span><span class=\"sr-only\">${content.subscribers_count}</span></dd>\n        ` : ''}\n        ${content.forks_count ? `\n          <dt data-detail=\"forks\"><span class=\"sr-only\">Forks</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.forks_count)}</span><span class=\"sr-only\">${content.forks_count}</span></dd>\n        ` : ''}\n      </dl>\n    </div>\n  `;\n}\n\nexport default html;","\nimport primer from './vars-primer.css?inline';\nimport global from './vars-global.css?inline';\nimport repo from './repository.css?inline';\nimport usr from './user.css?inline';\n\n/**\n * GitHub repository styles\n * @memberof GitHubUtils.repo\n * @name styles\n */\nexport const repository = `\n${primer}\n${global}\n${repo}\n`;\n\n/**\n * GitHub user styles\n * @memberof GitHubUtils.user\n * @name styles\n */\nexport const styles = `\n${primer}\n${global}\n${repo}\n${usr}\n`;"],"names":["cov_3enxy6g8h","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","generateMockResponse","content","type","b","status","f","url","login","full_name","method","delay","response","documentation_url","message","cov_11jgt0esny","githubApi","fetchRepo","options","cache","fetch","repoJson","json","parseFetchedRepo","repo","name","org","organization","owner","description","language","stargazers_count","forks_count","subscribers_count","cleanRepoContent","no_org","split","error","r","key","generateRepoContent","repoFromContent","fetched","Object","assign","cov_1d0l1r88ag","cov_2acdf23yj5","html","intToString","cov_jczjy0glc","repository","primer","styles","usr"],"mappings":"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AAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CA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"}