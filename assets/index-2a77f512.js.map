{"version":3,"file":"index-2a77f512.js","sources":["../../src/devto/utils/testing.js","../../src/devto/utils/index.js","../../src/devto/post/content.js","../../src/devto/post/html.js","../../src/devto/styles/index.js"],"sourcesContent":["/**\n * @name Testing\n * @module\n * @typicalname testing\n * @description Utility functions used for testing and prototyping components\n * @author @scottnath\n */\n\n/**\n * Generate a mock github api response\n * @param {(ForemPost|ForemUser)} content - mock return data\n * @param {string} type - 'users' or 'article'\n * @param {number} status - 200 or 404\n * @returns mock response object\n * @function\n */\nexport const generateMockResponse = (content, type='article', status=200) => {\n  let url = `https://dev.to/api/`;\n\n  if (type === 'article') {\n    // calls /articleS/:id (adds 's' to type)\n    url += `${type}s/${content.id}`;\n  } else if (type === 'users') {\n    if (!content.id) {\n      url += `${type}/by_username?url=${content.username}`;\n    } else {\n      url += `${type}/${content.id}`;\n    }\n  }\n\n  if (status === 404) {\n    return {\n      status: 404,\n      error: \"Not Found\"\n    }\n  }\n  return content\n}","\n/**\n * Content in an error response from the dev.to (or Forem) API\n * @typedef {Object} ForemError\n * @property {number} status - response status code\n * @property {string} error - error message\n */\n\n/**\n * Get the API url, whether dev.to or forem.dev\n * @function\n * @param {string} api - 'devto' or 'forem'\n * @returns {string} - url root for the API\n */\nexport const getApiUrl = (api = 'devto') => {\n  switch (api) {\n    case 'devto':\n      return 'https://dev.to/api';\n    case 'forem':\n      return 'https://forem.dev/api';\n    default:\n      return 'https://dev.to/api';\n  }\n}\n\n/**\n * Format a date for machine-readability\n * @function\n * @param {string} dt - a date string\n * @returns {string} - the machine-readable value of the date\n */\nexport const formatDate = (dt) => {\n  const x = new Date(dt);\n  const year = x.getFullYear()\n  const month = String(x.getMonth() + 1).padStart(2, '0')\n  const day = String(x.getDate()).padStart(2, '0')\n\n  return `${year}-${month}-${day}`\n}","import { getApiUrl } from '../utils/index.js';\n\n/**\n * Content about one post by dev.to (or Forem) user, sourced from a Forem API.\n * @see https://developers.forem.com/api/v1#tag/articles/operation/getLatestArticles\n * @typedef {Object} ForemPost\n * @property {string} title - The title of the post\n * @property {string} url - The URL of the post\n * @property {string} cover_image - The URL of the post's full-size cover image\n * @property {string} social_image - The URL of the post's social image\n * @property {number} id - The ID of the post\n * @memberof DEVUtils.post\n */\n\n/**\n * Forem post content, ready for HTML\n * @typedef {ForemPost} ForemPostHTML\n * @property {string} [error] - An error message\n * @memberof DEVUtils.post\n */\n\n/**\n * Fetch a post from the dev.to (or Forem) API\n * @see https://developers.forem.com/api/v0#tag/articles/operation/getArticleById\n * @param {string} id - unique post identifier\n * @returns {Object} response status 200: article; else status 404: error\n * @function\n * @ignore\n */\nexport const fetchPost = async (id) => {\n  const response = await fetch(`${getApiUrl()}/articles/${id}`);\n  const repoJson = await response.json();\n  return repoJson;\n}\n\n/**\n * @function Fetch a user's posts from the Forem API\n * @param {string} username \n * @returns {ForemPost[]} - An array of posts\n * @ignore\n */\nexport const fetchUserPosts = async (username) => {\n  const articles = await fetch(`${getApiUrl()}/articles/latest?per_page=1000&username=${username?.toLowerCase()}`);\n  const articlesJson = await articles.json();\n  return articlesJson;\n}\n\n/**\n * Find a post in an array of posts\n * @param {ForemPost[]} posts - array of posts\n * @param {string} [type='popular'] - type of post to find\n * @returns {ForemPost} - post\n * @ignore\n */\nexport const findPost = (posts, type='popular') => {\n  if (!posts.length) return {};\n  switch (type) {\n    case 'latest':\n      return posts.reduce((prev, current) => {\n        return (prev.published_at > current.published_at) ? prev : current\n\n      });\n    case 'popular':\n    default:\n      return posts.reduce((prev, current) => {\n        return (prev.positive_reactions_count > current.positive_reactions_count) ? prev : current\n      });\n  }\n}\n\n/**\n * Parse a dev.to (or Forem) post's content. This is a reducer on the endpoint response, \n *  but generally reduces any object to just the data required for the post component HTML\n * @param {Object} post - post object\n * @returns {ForemPost}\n * @function\n * @ignore\n */\nexport const parseFetchedPost = (post = {}) => {\n  return {\n    title: post.title,\n    url: post.url,\n    cover_image: post.cover_image,\n    social_image: post.social_image,\n  }\n}\n\n/**\n * Parses and confirms post content to match what is expected by the post HTML\n * @param {ForemPost} content \n * @returns {(ForemPost | ForemError)} \n * @ignore\n */\nexport const cleanPostContent = (content = {}) => {\n  const post = parseFetchedPost(content);\n  if (!post.title || !post.url || !post.cover_image) {\n    return { error: 'Post content is missing required data' };\n  }\n  return post;\n}\n\n/**\n * Generates an object of content for the post HTML\n * @param {ForemPost} content \n * @param {boolean} [fetch] - whether to fetch post content from the API\n * @returns {(ForemPost | ForemError)} content ready for HTML, possibly includes fetched content\n * @function\n * @memberof DEVUtils.post\n * @name generateContent\n */\nexport const generatePostContent = async (content, fetch = false) => {\n  if (fetch) {\n    if (!content.id) {\n      return { error: 'Post ID is required to fetch post content' };\n    }\n    let fetched = {};\n    fetched = await fetchPost(content.id);\n    if (fetched.error) {\n      if (fetched.error === 'Not Found') {\n        return { error: `Fetch Error: Post \"${content.id}\" not found`};\n      }\n      return { error: `Fetch Error: ${fetched.message}`};\n    }\n    fetched = cleanPostContent(fetched);\n    if (fetched.error) return fetched;\n    return parseFetchedPost(Object.assign({}, fetched, content));\n  }\n\n  return cleanPostContent(content);\n}","\n/**\n * dev.to (or forem.dev) post HTML generation\n * @param {ForemPostHTML} content \n * @returns {string} HTML string with added content\n * @function\n * @memberof DEVUtils.post\n */\nfunction html(content) {\n  if (content.error || !content.url || !content.title) {\n    return '';\n  }\n\n  return `\n    <span class=\"post\" itemscope itemtype=\"http://schema.org/Article\">\n      <a href=\"${content.url}\" itemprop=\"url\" aria-label=\"read post ${content.title}\">\n        <img src=\"${content.cover_image}\" itemprop=\"image\" alt=\"Cover image for post ${content.title}\" />\n        <span itemprop=\"name\">${content.title}</span>\n      </a>\n    </span>\n  `;\n}\n\nexport default html;","\nimport devStyles from './vars-devto.css?inline';\nimport globalStyles from './global.css?inline';\nimport style from './styles.css?inline';\n\n/**\n * DEV UI styles\n * @memberof DEVUtils.user\n * @name styles\n */\nexport const styles = `\n${devStyles}\n${globalStyles}\n${style}\n`;"],"names":["cov_sk804jgl3","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","cov_2fui2oodof","getApiUrl","api","b","f","formatDate","dt","x","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","cov_ctea111t2","fetchPost","id","response","fetch","repoJson","json","fetchUserPosts","username","articles","toLowerCase","articlesJson","findPost","posts","type","length","reduce","prev","current","published_at","positive_reactions_count","parseFetchedPost","post","title","url","cover_image","social_image","cleanPostContent","content","error","generatePostContent","fetched","message","Object","assign","cov_wnqqxf7oh","html","cov_2f58qe0kpt","styles","devStyles","globalStyles","style"],"mappings":"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CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,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"}