{"version":3,"file":"html-47749bfa.js","sources":["../../src/github/repository/content.js","../../src/github/fixtures/index.js","../../src/github/styles/index.js","../../src/github/repository/html.js"],"sourcesContent":["/** @ignore */\nconst githubApi = 'https://api.github.com';\n\n/**\n * Content needed to render a GitHub repository. This is a subset of the `repos` endpoint response\n * @typedef {Object} GitHubRepositoryHTML\n * \n * @property {string} full_name - repository org and name, as in `scottnath/profile-components`\n * @property {string} name - repo name\n * @property {string} [org] - repo owner organization's login, found at `<REST_RESPONSE>.organization.login`\n * @property {string} [description] - repo description\n * @property {string} [language] - programming language used in repo\n * @property {string} [stargazers_count] - number of stars\n * @property {string} [forks_count] - number of forks\n * @property {string} [subscribers_count] - number of watchers\n * @property {string} [error] - error message, if any\n * @memberof GitHubUtils.repo\n */\n\n/**\n * Fetch a GitHub repository's content from the GitHub api\n * @see https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#get-a-repository\n * @param {string} full_name\n * @returns response status 200: {Object} repo; else {Object} error\n * @function\n * @ignore\n */\nexport const fetchRepo = async (full_name) => {\n  const options = {\n    cache: 'no-cache',\n  };\n  const response = await fetch(`${githubApi}/repos/${full_name}`, options);\n  const repoJson = await response.json();\n  return repoJson;\n}\n\n/**\n * Parse a GitHub repository's content. This is a reducer on the endpoint response, \n *  but generally reduces any object to just the data required for the repo component HTML\n * @param {Object} repo - GitHub repository object\n * @returns {GitHubRepositoryHTML}\n * @function\n * @ignore\n */\nexport const parseFetchedRepo = (repo = {}) => {\n  return {\n    full_name: repo.full_name,\n    name: repo.name,\n    org: repo.org || repo.organization?.login || repo.owner?.login,\n    description: repo.description,\n    language: repo.language,\n    stargazers_count: repo.stargazers_count,\n    forks_count: repo.forks_count,\n    subscribers_count: repo.subscribers_count,\n  }\n}\n\n/**\n * Parses and cleans repository content to match what is expected by the repository HTML\n * @param {GitHubRepositoryHTML} content - a content object either from component or GitHub API\n * @param {boolean} [no_org] - if true, remove the `org` attribute from the returned object\n * @returns {GitHubRepositoryHTML} ready for HTML content\n * @function\n * @ignore\n */\nexport const cleanRepoContent = (content, no_org) => {\n  const repo = parseFetchedRepo(content);\n  if (!repo.full_name || !repo.full_name.split('/')[1]) {\n    repo.error = 'Missing repo attribute: `full_name`';\n    return repo;\n  }\n  if (!repo.name) {\n    repo.name = repo.full_name.split('/')[1];\n  }\n  if (!repo.org) {\n    repo.org = repo.full_name.split('/')[0];\n  }\n  if (no_org) {\n    delete repo.org;\n  }\n  if (repo.stargazers_count === '0') delete repo.stargazers_count;\n  if (repo.forks_count === '0') delete repo.forks_count;\n  if (repo.subscribers_count === '0') delete repo.subscribers_count;\n  const r = {};\n  // remove `undefined` values\n  for (const key in repo) {\n    if (repo[key]) r[key] = repo[key];\n  }\n  return r;\n}\n\n/**\n * Generates an object of content for the repository HTML\n * @param {GitHubRepositoryHTML} content \n * @param {boolean} [fetch] \n * @param {boolean} [no_org] \n * @returns {GitHubRepositoryHTML} content ready for HTML, possibly includes fetched content\n * @function\n * @memberof GitHubUtils.repo\n * @name generateContent\n */\nexport const generateRepoContent = async (content, fetch = false, no_org = false) => {\n  const repoFromContent = cleanRepoContent(content, no_org);\n  if (repoFromContent.error) return repoFromContent;\n  let fetched = {};\n  if (fetch) {\n    fetched = await fetchRepo(repoFromContent.full_name);\n    if (fetched.message) {\n      if (fetched.message === 'Not Found') {\n        return { error: `Fetch Error: Repo \"${repoFromContent.full_name}\" not found`};\n      }\n      return { error: `Fetch Error: ${fetched.message}`};\n    }\n    fetched = cleanRepoContent(fetched, no_org);\n  }\n  return Object.assign({}, fetched, repoFromContent);\n}\n","\n// repositories\nexport { default as repoFreeCodeCamp } from './generated/repo--freeCodeCamp-freeCodeCamp.json';\nexport { default as repoProfileComponents } from './generated/repo--scottnath-profile-components.json';\nexport { default as repoScottnathdotcom } from './generated/repo--scottnath-scottnath.com.json';\nexport { default as repoStorydocker } from './generated/repo--storydocker-storydocker.json';\n\n// users\nexport { default as userScottnath } from './generated/user--scottnath.json';\nexport { default as userSindresorhus } from './generated/user--sindresorhus.json';","\nimport primer from './vars-primer.css?inline';\nimport global from './vars-global.css?inline';\nimport repo from './repository.css?inline';\nimport usr from './user.css?inline';\n\n/**\n * GitHub repository styles\n * @memberof GitHubUtils.repo\n * @name styles\n */\nexport const repository = `\n${primer}\n${global}\n${repo}\n`;\n\n/**\n * GitHub user styles\n * @memberof GitHubUtils.user\n * @name styles\n */\nexport const styles = `\n${primer}\n${global}\n${repo}\n${usr}\n`;","\n\nimport { intToString } from '../../utils/index.js';\n\n/**\n * GitHub repository HTML generation\n * @param {GitHubRepositoryHTML} content - content needed to render a GitHub repository\n * @returns {string} HTML which represents a GitHub repository\n * @function\n * @memberof GitHubUtils.repo\n */\nfunction html(content) {\n  if (content.error) {\n    return `\n      <div aria-label=\"GitHub repository\" class=\"repo\" itemscope itemtype=\"http://schema.org/Action\">\n        <p itemprop=\"error\">${content.error}</p>\n      </div>\n    `\n  }\n  return `\n    <div aria-label=\"GitHub repository\" class=\"repo\" itemscope itemtype=\"http://schema.org/SoftwareSourceCode\">\n      <a href=\"https://github.com/${content.full_name}\" itemprop=\"codeRepository\">\n        ${content.org ? `\n          <span itemprop=\"maintainer\">${content.org} /</span>\n        ` : ''}\n        <span itemprop=\"name\">${content.name}</span>\n      </a>\n      ${content.description ? `\n        <p itemprop=\"about\">${content.description}</p>\n      ` : ''}\n      <dl aria-label=\"Repository details\">\n        ${content.language ? `\n          <dt data-detail=\"language\" data-language=\"${content.language}\"><span class=\"sr-only\">Language</span></dt>\n          <dd itemprop=\"programmingLanguage\">${content.language}</dd>\n        ` : ''}\n        ${content.stargazers_count ? `\n          <dt data-detail=\"stars\"><span class=\"sr-only\">Stars</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.stargazers_count)}</span><span class=\"sr-only\">${content.stargazers_count}</span></dd>\n        ` : ''}\n        ${content.subscribers_count ? `\n          <dt data-detail=\"watchers\"><span class=\"sr-only\">Watchers</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.subscribers_count)}</span><span class=\"sr-only\">${content.subscribers_count}</span></dd>\n        ` : ''}\n        ${content.forks_count ? `\n          <dt data-detail=\"forks\"><span class=\"sr-only\">Forks</span></dt>\n          <dd><span aria-hidden=\"true\">${intToString(content.forks_count)}</span><span class=\"sr-only\">${content.forks_count}</span></dd>\n        ` : ''}\n      </dl>\n    </div>\n  `;\n}\n\nexport default html;"],"names":["cov_11jgt0esny","path","hash","global","gcv","coverageData","coverage","actualCoverage","githubApi","s","fetchRepo","full_name","f","options","cache","response","fetch","repoJson","json","parseFetchedRepo","repo","b","name","org","organization","login","owner","description","language","stargazers_count","forks_count","subscribers_count","cleanRepoContent","content","no_org","split","error","r","key","generateRepoContent","repoFromContent","fetched","message","Object","assign","cov_1d0l1r88ag","cov_jczjy0glc","repository","primer","styles","usr","cov_2acdf23yj5","html","intToString"],"mappings":"mCAeY,SAAAA,GAAA,CAAA,IAAAC,EAAA,2FAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,2FAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,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"}