{"version":3,"file":"repository.stories-ed86a3ce.js","sources":["../../src/github/repository/repository.shared-spec.js","../../src/github/repository/index.js"],"sourcesContent":["import { expect } from '@storybook/jest';\nimport { within as shadowWithin } from 'shadow-dom-testing-library';\n\n/**\n * Extract elements from an shadow DOM element\n */\nexport const getElements = async (canvasElement) => {\n  const screen = shadowWithin(canvasElement);\n  const container = await screen.findByShadowLabelText(/GitHub repository/i);\n  const link = await screen.queryByShadowRole('link');\n  const langDetails = await container?.querySelector('[itemprop=\"programmingLanguage\"]');\n  const langTerm = await langDetails?.previousElementSibling;\n  return { \n    screen,\n    canvasElement,\n    container,\n    link,\n    error: await container?.querySelector('[itemprop=\"error\"]'),\n    org: await container?.querySelector('[itemprop=\"maintainer\"]'),\n    name: await container?.querySelector('[itemprop=\"name\"]'),\n    description: await container?.querySelector('[itemprop=\"about\"]'),\n    langDetails,\n    langTerm,\n  };\n}\n\n/**\n * Ensure elements are present and have the correct content\n */\nexport const ensureElements = async (elements, args) => {\n  if (args.error) {\n    await expect(elements.link).toBeFalsy();\n    await expect(elements.container).toBeTruthy();\n    await expect(elements.error).toBeTruthy();\n    await expect(elements.error).toHaveTextContent(args.error);\n    return;\n  }\n  if (!args.full_name) {\n    await expect(elements.link).toBeFalsy();\n    await expect(elements.container).toBeTruthy();\n    await expect(elements.container).toHaveTextContent('Missing repo attribute: `full_name`');\n    return;\n  }\n  /** full_name split into an array */\n  const full_nameSplit = args.full_name.split('/');\n\n  await expect(elements.link).toBeTruthy();\n  await expect(elements.container).toBeTruthy();\n  await expect(elements.name).toBeTruthy();\n  if (args?.name) {\n    await expect(elements.name).toHaveTextContent(args.name);\n  } else {\n    await expect(elements.name).toHaveTextContent(full_nameSplit[1]);\n  }\n\n  /** org from args or derived from full_nameSplit */\n  const org = args?.org ? args.org : full_nameSplit[0];\n  if (args.no_org) {\n    await expect(elements.org).toBeFalsy();\n  } else {\n    await expect(elements.org).toBeTruthy();\n    await expect(elements.org).toHaveTextContent(org);\n  }\n  \n  if (args?.description) {\n    await expect(elements.description).toBeTruthy();\n    await expect(elements.description).toHaveTextContent(args.description);\n  } else {\n    await expect(elements.description).toBeFalsy();\n  }\n  if (args?.language) {\n    await expect(elements.langDetails).toBeTruthy();\n    await expect(elements.langTerm).toBeTruthy();\n  } else {\n    await expect(elements.langDetails).toBeFalsy();\n    await expect(elements.langTerm).toBeFalsy();\n  }\n}","import { generateRepoContent } from './content.js';\nimport html from './html.js';\nimport { repository as styles } from '../styles/index.js';\n\n/**\n * GitHub repository web component\n * @summary Native web component which shows a GitHub repository's content. Can use local data, \n *  fetch data from the GitHub rest API, or use a combination of both.\n * @element github-repository\n * @name GitHubRepository\n * @module\n * \n * @property {string} full_name - repository org and name, as in `scottnath/profile-components`\n * @property {boolean} [fetch] - when true, fetches repo from the [GitHub api](https://docs.github.com/en/rest/repos/repos#get-a-repository)\n * @property {string} [name] - repo name\n * @property {string} [org] - repo owner organization's login, found at `<REST_RESPONSE>.organization.login`\n * @property {string} [description] - repo description\n * @property {string} [language] - programming language used in repo\n * @property {string} [stargazers_count] - number of stars\n * @property {string} [forks_count] - number of forks\n * @property {string} [subscribers_count] - number of watchers\n * @property {string} [itemprop] - Itemprop content to go with a containing component's itemscope\n * @property {string} [no_org] - Do not include the repo owner or organization\n * @property {string} [theme] - color theme for the component\n * \n * @example\n * <!-- import the web component -->\n * <script type=\"module\" src=\"https://unpkg.com/profile-components/dist/github-repository.js\"></script>\n * \n * <!-- use the custom element -->\n * <github-repository full_name=\"scottnath/profile-components\" fetch=\"true\"></github-repository>\n */\nexport class GitHubRepository extends HTMLElement {\n  /**\n   * @ignore\n   */\n  constructor() {\n    super();\n    this.attrs = {};\n    this.repo = {};\n    this.attachShadow({ mode: \"open\" });\n    this._getAttributes();\n  }\n\n  /**\n   * Generate variables at `this.[attribute-name]` for each attribute on the element\n   * @ignore\n   */\n  _getAttributes() {\n    for (let name of this.getAttributeNames()) {\n      if (this.getAttribute(name)) {\n        this.attrs[name] = this.getAttribute(name);\n      }\n    }\n  }\n\n  async connectedCallback() {\n    let view = `<style>${styles}</style>`;\n    this.repo = await generateRepoContent(this.attrs, this.attrs.fetch, this.attrs.no_org);\n    view += html(this.repo);\n    this.shadowRoot.innerHTML = view;\n    if (this.attrs.itemprop) {\n      this.setAttribute('itemprop', this.attrs.itemprop);\n    }\n    if (this.attrs.theme) {\n      this.setAttribute('data-theme', this.attrs.theme);\n    }\n  }\n}\n\ncustomElements.define('github-repository', GitHubRepository);\n"],"names":["getElements","canvasElement","screen","shadowWithin","container","link","langDetails","langTerm","ensureElements","elements","args","expect","full_nameSplit","org","cov_10grzxs21d","path","hash","global","gcv","coverageData","coverage","actualCoverage","GitHubRepository","HTMLElement","constructor","f","s","attrs","repo","attachShadow","mode","_getAttributes","name","getAttributeNames","getAttribute","b","connectedCallback","view","styles","generateRepoContent","fetch","no_org","html","shadowRoot","innerHTML","itemprop","setAttribute","theme","customElements","define"],"mappings":"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AAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,geAAA,CAAA,QAAA,EAAA,QAAA,CAAA,wFAAA,EAAA,MAAA,CAAA,EAAA,SAAA,87ZAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAAD,OAAAA,EAAA,UAAA,CAAA,OAAAO,CAAA,EAAAA,CAAA,CAAAP,IAiBC,MAAAQ,WAAyBC,WAAY,CAIhDC,aAAc,CAAAV,EAAA,EAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAY,EAAA,CAAA,IACZ,MAAK,EAAGZ,EAAA,EAAAY,EAAA,CAAA,IACR,KAAKC,MAAQ,CAAA,EAAGb,EAAA,EAAAY,EAAA,CAAA,IAChB,KAAKE,KAAO,GAAGd,IAAAY,EACf,CAAA,IAAA,KAAKG,aAAa,CAAEC,KAAM,MAAO,CAAC,EAAEhB,IAAAY,EACpC,CAAA,IAAA,KAAKK,eAAc,CACrB,CAMAA,gBAAiB,CAAAjB,IAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAY,EAAA,CAAA,IACf,QAASM,KAAY,KAACC,oBAAqBnB,EAAAY,EAAAA,OACrC,KAAKQ,aAAaF,CAAI,GAAGlB,EAAA,EAAAqB,EAAArB,CAAAA,EAAAA,CAAAA,IAAAA,IAAAY,EAAA,CAAA,IAC3B,KAAKC,MAAMK,CAAI,EAAI,KAAKE,aAAaF,CAAI,GAC1ClB,EAAAqB,EAAAA,EACH,CAAA,EAAA,CAAA,GACF,CAEA,MAAMC,mBAAoB,CAAAtB,IAAAW,EAAA,CAAA,IACxB,IAAIY,GAAIvB,EAAA,EAAAY,EAAA,CAAA,IAAI,UAASY,EAAO,YAAUxB,EAAA,EAAAY,EACtC,CAAA,IAAA,KAAKE,KAAO,MAAMW,GAAoB,KAAKZ,MAAO,KAAKA,MAAMa,MAAO,KAAKb,MAAMc,MAAM,EAAE3B,EAAA,EAAAY,EAAA,EAAA,IACvFW,GAAQK,GAAK,KAAKd,IAAI,EAAEd,EAAA,EAAAY,EACxB,EAAA,IAAA,KAAKiB,WAAWC,UAAYP,EAAKvB,IAAAY,QAC7B,KAAKC,MAAMkB,UAAU/B,EAAA,EAAAqB,EAAA,CAAA,EAAA,CAAA,IAAArB,EAAA,EAAAY,EACvB,EAAA,IAAA,KAAKoB,aAAa,WAAY,KAAKnB,MAAMkB,QAAQ,GAClD/B,IAAAqB,EAAArB,CAAAA,EAAAA,CAAAA,IAAAA,EAAA,EAAAY,EACD,EAAA,IAAI,KAAKC,MAAMoB,OAAOjC,EAAA,EAAAqB,EAAA,CAAA,EAAA,CAAA,IAAArB,IAAAY,EAAA,EAAA,IACpB,KAAKoB,aAAa,aAAc,KAAKnB,MAAMoB,KAAK,GACjDjC,IAAAqB,EAAA,CAAA,EAAA,CAAA,GACH,CACF,CAACrB,EAAAY,EAAAA,EAEDsB,EAAAA,IAAAA,eAAeC,OAAO,oBAAqB3B,EAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}