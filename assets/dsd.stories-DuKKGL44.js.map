{"version":3,"file":"dsd.stories-DuKKGL44.js","sources":["../../src/github/index.js"],"sourcesContent":["/**\n * @name GitHub-Utilities\n * @kind module\n * @typicalname githubUtils\n * @namespace GitHubUtils\n * @description Utility functions for fetching and parsing GitHub api data, getting\n *  styles and generating HTML for GitHub profile UIs\n * @author @scottnath\n */\n\nimport {styles, repository} from './styles/index.js';\nimport {generateUserContent} from './user/content.js';\nimport userHTML from './user/html.js';\nimport {generateRepoContent} from './repository/content.js';\nimport repoHTML from './repository/html.js';\n\n/**\n * @name GitHub-Repository-Declarative-Shadow-DOM\n * @param {GitHubRepositoryHTML} content - a content object representing a GitHub repository\n * @param {boolean} fetch \n * @returns {string} GitHub HTML wrapped in a `template`\n * @function\n * @memberof GitHubUtils.repo\n * @namespace dsd\n * @description Generate a `template` element with shadowrootmode and a repository in it\n * \n * @example <caption>Server side rendering a Repository with Declarative Shadow Dom</caption>\n * <github-repository id=\"github-repo-1\"></github-repository>\n * \n * <script type=\"module\">\n * import {repo} from 'profile-components/github-utils';\n * const dsdHTML = repo.dsd({full_name: 'scottnath/profile-components'}, true);\n * document.querySelector('#github-repo-1').innerHTML = dsdHTML;\n * </script>\n */\nconst dsdRepo = async (content, fetch = false) => {\n  const generated = await generateRepoContent(content, fetch);\n  let genHTML = '<template shadowrootmode=\"open\"><style>' + repository + '</style>';\n  genHTML += repoHTML(generated);\n  genHTML += '</template>';\n  return genHTML;\n}\n\n/**\n * @name GitHub-Repository-Utilities\n * @module\n * @namespace repo\n * @memberof GitHubUtils\n * @description Utility functions for a repository\n */\nconst repo = {\n  generateContent: generateRepoContent,\n  html: repoHTML,\n  styles: repository,\n  dsd: dsdRepo\n};\n\n/**\n * @name GitHub-Declarative-Shadow-DOM\n * @param {GitHubUserHTML} content - a content object representing a GitHub user\n * @param {boolean} fetch \n * @returns {string} GitHub HTML wrapped in a `template`\n * @function\n * @memberof GitHubUtils.user\n * @namespace dsd\n * @description Generate a `template` element with shadowrootmode with a User in it\n * \n * @example <caption>Server side rendering with Declarative Shadow Dom</caption>\n * <github-user></github-user>\n * \n * <script type=\"module\">\n * import {dsd} from 'profile-components/github-utils';\n * const dsdHTML = dsd({login: 'scottnath'}, true);\n * document.querySelector('github-user').innerHTML = dsdHTML;\n * </script>\n */\nconst dsd = async (content, fetch = false) => {\n  const generated = await generateUserContent(content, fetch);\n  let genHTML = '<template shadowrootmode=\"open\"><style>' + styles + '</style>';\n  genHTML += userHTML(generated);\n  genHTML += '</template>';\n  return genHTML;\n}\n\n/**\n * @name GitHub-User-Utilities\n * @module\n * @namespace user\n * @memberof GitHubUtils\n * @description Utility functions for a user\n */\nconst user = {\n  generateContent: generateUserContent,\n  html: userHTML,\n  styles,\n  dsd\n};\n\nexport {\n  repo,\n  user,\n  dsd\n}"],"names":["cov_ak11hjt7s","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","dsdRepo","content","fetch","b","f","generated","generateRepoContent","genHTML","repository","repoHTML","repo","generateContent","html","styles","dsd","generateUserContent","userHTML"],"mappings":"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"}