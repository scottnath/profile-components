{"version":3,"file":"html-0916d0e3.js","sources":["../../src/devto/helpers/index.js","../../src/devto/post/content.js","../../src/devto/styles/index.js","../../src/devto/post/html.js"],"sourcesContent":["\n/**\n * Content in an error response from the dev.to (or Forem) API\n * @typedef {Object} ForemError\n * @property {number} status - response status code\n * @property {string} error - error message\n */\n\n/**\n * Get the API url, whether dev.to or forem.dev\n * @function\n * @param {string} api - 'devto' or 'forem'\n * @returns {string} - url root for the API\n */\nexport const getApiUrl = (api = 'devto') => {\n  switch (api) {\n    case 'devto':\n      return 'https://dev.to/api';\n    case 'forem':\n      return 'https://forem.dev/api';\n    default:\n      return 'https://dev.to/api';\n  }\n}\n\n/**\n * Format a date for machine-readability\n * @function\n * @param {string} dt - a date string\n * @returns {string} - the machine-readable value of the date\n */\nexport const formatDate = (dt) => {\n  const x = new Date(dt);\n  const year = x.getFullYear()\n  const month = String(x.getMonth() + 1).padStart(2, '0')\n  const day = String(x.getDate()).padStart(2, '0')\n\n  return `${year}-${month}-${day}`\n}","import { getApiUrl } from '../helpers/index.js';\n\n/**\n * Content about one post by dev.to (or Forem) user, sourced from a Forem API.\n * @see https://developers.forem.com/api/v1#tag/articles/operation/getLatestArticles\n * @typedef {Object} ForemPost\n * @property {string} title - The title of the post\n * @property {string} url - The URL of the post\n * @property {string} cover_image - The URL of the post's full-size cover image\n * @property {string} social_image - The URL of the post's social image\n * @property {number} id - The ID of the post\n * @memberof DEVUtils.post\n */\n\n/**\n * Forem post content, ready for HTML\n * @typedef {ForemPost} ForemPostHTML\n * @property {string} [error] - An error message\n * @memberof DEVUtils.post\n */\n\n/**\n * Fetch a post from the dev.to (or Forem) API\n * @see https://developers.forem.com/api/v0#tag/articles/operation/getArticleById\n * @param {string} id - unique post identifier\n * @returns {Object} response status 200: article; else status 404: error\n * @function\n * @ignore\n */\nexport const fetchPost = async (id) => {\n  const options = {\n    cache: 'no-cache',\n  };\n  const response = await fetch(`${getApiUrl()}/articles/${id}`, options);\n  const repoJson = await response.json();\n  return repoJson;\n}\n\n/**\n * @function Fetch a user's posts from the Forem API\n * @param {string} username \n * @returns {ForemPost[]} - An array of posts\n * @ignore\n */\nexport const fetchUserPosts = async (username) => {\n  const options = {\n    cache: 'no-cache',\n  };\n  const articles = await fetch(`${getApiUrl()}/articles/latest?per_page=1000&username=${username?.toLowerCase()}`, options);\n  const articlesJson = await articles.json();\n  return articlesJson;\n}\n\n/**\n * Find a post in an array of posts\n * @param {ForemPost[]} posts - array of posts\n * @param {string} [type='popular'] - type of post to find\n * @returns {ForemPost} - post\n * @ignore\n */\nexport const findPost = (posts, type='popular') => {\n  if (!posts.length) return {};\n  switch (type) {\n    case 'latest':\n      return posts.reduce((prev, current) => {\n        return (prev.published_at > current.published_at) ? prev : current\n\n      });\n    case 'popular':\n    default:\n      return posts.reduce((prev, current) => {\n        return (prev.positive_reactions_count > current.positive_reactions_count) ? prev : current\n      });\n  }\n}\n\n/**\n * Parse a dev.to (or Forem) post's content. This is a reducer on the endpoint response, \n *  but generally reduces any object to just the data required for the post component HTML\n * @param {Object} post - post object\n * @returns {ForemPost}\n * @function\n * @ignore\n */\nexport const parseFetchedPost = (post = {}) => {\n  return {\n    title: post.title,\n    url: post.url,\n    cover_image: post.cover_image,\n    social_image: post.social_image,\n  }\n}\n\n/**\n * Parses and confirms post content to match what is expected by the post HTML\n * @param {ForemPost} content \n * @returns {(ForemPost | ForemError)} \n * @ignore\n */\nexport const cleanPostContent = (content = {}) => {\n  const post = parseFetchedPost(content);\n  if (!post.title || !post.url || !post.cover_image) {\n    return { error: 'Post content is missing required data' };\n  }\n  return post;\n}\n\n/**\n * Generates an object of content for the post HTML\n * @param {ForemPost} content \n * @param {boolean} [fetch] - whether to fetch post content from the API\n * @returns {(ForemPost | ForemError)} content ready for HTML, possibly includes fetched content\n * @function\n * @memberof DEVUtils.post\n * @name generateContent\n */\nexport const generatePostContent = async (content, fetch = false) => {\n  if (fetch) {\n    if (!content.id) {\n      return { error: 'Post ID is required to fetch post content' };\n    }\n    let fetched = {};\n    fetched = await fetchPost(content.id);\n    if (fetched.error) {\n      if (fetched.error === 'Not Found') {\n        return { error: `Fetch Error: Post \"${content.id}\" not found`};\n      }\n      return { error: `Fetch Error: ${fetched.message}`};\n    }\n    fetched = cleanPostContent(fetched);\n    if (fetched.error) return fetched;\n    return parseFetchedPost(Object.assign({}, fetched, content));\n  }\n\n  return cleanPostContent(content);\n}","\nimport devStyles from './vars-devto.css?inline';\nimport globalStyles from './global.css?inline';\nimport style from './styles.css?inline';\n\n/**\n * DEV UI styles\n * @memberof DEVUtils.user\n * @name styles\n */\nexport const styles = `\n${devStyles}\n${globalStyles}\n${style}\n`;","\n/**\n * dev.to (or forem.dev) post HTML generation\n * @param {ForemPostHTML} content \n * @returns {string} HTML string with added content\n * @function\n * @memberof DEVUtils.post\n */\nfunction html(content) {\n  if (content.error) {\n    return `\n      <div aria-label=\"dev.to article\" class=\"post\" itemscope itemtype=\"http://schema.org/Action\">\n        <p itemprop=\"error\">${content.error}</p>\n      </div>\n    `\n  }\n\n  return `\n    <span aria-label=\"dev.to article\" class=\"post\" itemscope itemtype=\"http://schema.org/Article\">\n      <a href=\"${content.url}\" itemprop=\"url\" aria-label=\"read post ${content.title}\">\n        <img src=\"${content.cover_image}\" itemprop=\"image\" alt=\"Cover image for post ${content.title}\" />\n        <span itemprop=\"name\">${content.title}</span>\n      </a>\n    </span>\n  `;\n}\n\nexport default html;"],"names":["cov_2ctpf7jzb3","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","getApiUrl","api","b","f","formatDate","dt","x","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","cov_ctea111t2","fetchPost","id","options","cache","response","fetch","repoJson","json","fetchUserPosts","username","articles","toLowerCase","articlesJson","findPost","posts","type","length","reduce","prev","current","published_at","positive_reactions_count","parseFetchedPost","post","title","url","cover_image","social_image","cleanPostContent","content","error","generatePostContent","fetched","message","Object","assign","cov_2f58qe0kpt","styles","devStyles","globalStyles","style","cov_wnqqxf7oh","html"],"mappings":"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AAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,E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"}