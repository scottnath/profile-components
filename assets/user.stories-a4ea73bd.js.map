{"version":3,"file":"user.stories-a4ea73bd.js","sources":["../../src/devto/user/user.shared-spec.js","../../src/devto/user/index.js"],"sourcesContent":["\nimport { expect } from '@storybook/jest';\nimport { within as shadowWithin } from 'shadow-dom-testing-library';\nimport { formatDate } from \"../helpers\";\n\n/**\n * Extract elements from an shadow DOM element\n */\nexport const getElements = async (canvasElement) => {\n  const screen = shadowWithin(canvasElement);\n  const container = await screen.findByShadowLabelText(/dev.to user profile/i);\n  const [mainLink] = await screen.queryAllByShadowRole('link');\n  const [ avatar ] = await screen.queryAllByShadowRole('img');\n  let latest_post = null;\n  let popular_post = null;\n  let postList = null;\n  const terms = await screen.queryAllByShadowRole('term');\n  if (terms.length) {\n    postList = terms[0].parentElement;\n    terms.forEach((term) => {\n      if (term.textContent === 'Latest post') {\n        latest_post = term.nextElementSibling;\n      }\n      if (term.textContent === 'Popular post') {\n        popular_post = term.nextElementSibling;\n      }\n    });\n  }\n  return { \n    screen,\n    canvasElement,\n    container,\n    error: await container?.querySelector('[itemprop=\"error\"]'),\n    mainLink: mainLink !== undefined ? mainLink : null,\n    avatar,\n    name: await mainLink?.querySelector('[itemprop=\"name\"]'),\n    summary: await container?.querySelector('[itemprop=\"description\"]'),\n    joined_at: await container?.querySelector('[itemprop=\"startDate\"]'),\n    post_count: await container?.querySelector('.post_count'),\n    postList,\n    latest_post,\n    popular_post,\n  };\n}\n\n/**\n * Ensure elements are present and have the correct content\n */\nexport const ensureElements = async (elements, args) => {\n  await expect(elements.container).toBeInTheDocument();\n  if (args.error) {\n    await expect(elements.mainLink).not.toBeInTheDocument();\n    await expect(elements.error).toBeInTheDocument();\n    await expect(elements.error).toHaveTextContent(args.error);\n    return;\n  }\n\n  await expect(elements.error).not.toBeInTheDocument();\n  await expect(elements.mainLink).toBeInTheDocument();\n  await expect(elements.avatar).toBeInTheDocument();\n  await expect(elements.name).toBeInTheDocument();\n  \n  if (args?.summary) {\n    await expect(elements.summary).toBeInTheDocument();\n    await expect(elements.summary.textContent).toEqual(args.summary);\n  } else {\n    await expect(elements.summary).not.toBeInTheDocument();\n  }\n\n  if (args?.joined_at) {\n    await expect(elements.joined_at).toBeInTheDocument();\n    await expect(elements.joined_at).toHaveAttribute('datetime', formatDate(args.joined_at));\n    await expect(elements.joined_at.textContent).toContain(args.joined_at);\n  } else {\n    await expect(elements.joined_at).not.toBeInTheDocument();\n  }\n  \n  if (args?.post_count) {\n    await expect(elements.post_count).toBeInTheDocument();\n    await expect(elements.post_count.textContent).toContain(`${args.post_count} posts published`);\n  } else {\n    await expect(elements.post_count).not.toBeInTheDocument();\n  }\n  \n  if (args?.latest_post) {\n    await expect(elements.latest_post).toBeInTheDocument();\n  } else {\n    await expect(elements.latest_post).not.toBeInTheDocument();\n  }\n  if (args?.popular_post) {\n    await expect(elements.popular_post).toBeInTheDocument();\n  } else {\n    await expect(elements.popular_post).not.toBeInTheDocument();\n  }\n}","\nimport { generateUserContent } from './content.js';\nimport userHTML from './html.js';\nimport { styles } from '../styles/index.js';\n\n/**\n * dev.to user profile web component\n * @summary Native web component which shows a dev.to user's profile content. \n *  Can use local data, or fetch data from the dev.to API, or use a combination of both.\n * @element devto-user\n * @name DevtoUser\n * @module\n * \n * @property {string} username - User's dev.to username\n * @property {boolean} [fetch] - when true, fetches user and posts from the [Forem API](https://developers.forem.com/api/v0#tag/users/operation/getUser)\n * @property {string} [name] - The name of the user\n * @property {string} [summary] - The user's bio\n * @property {string} [joined_at] - The date the user joined\n * @property {string} [profile_image] - The URL of the user's profile image\n * @property {number} [post_count] - The number of posts the user has published\n * @property {string} [latest_post] - User's latest post content, JSON stringified \n * @property {string} [popular_post] - User's most popular post content, JSON stringified \n * @property {string} [theme] - color theme for the component\n * \n * @example\n * <!-- import the web component -->\n * <script type=\"module\" src=\"https://unpkg.com/profile-components/dist/devto-user.js\"></script>\n * \n * <!-- use the custom element -->\n * <devto-user username=\"scottnath\" fetch=\"true\"></devto-user>\n */\nexport class DevtoUser extends HTMLElement {\n  /**\n   * @ignore\n   */\n  constructor() {\n    super();\n    this.attrs = {};\n    this.attachShadow({ mode: \"open\" });\n    this._getAttributes();\n  }\n\n  /**\n   * Generate variables at `this.[attribute-name]` for each attribute on the element\n   * @ignore\n   */\n  _getAttributes() {\n    for (let name of this.getAttributeNames()) {\n      if (this.getAttribute(name)) {\n        this.attrs[name] = this.getAttribute(name);\n      }\n    }\n  }\n\n  async connectedCallback() {\n    let view = `<style>${styles}</style>`;\n    this.user = await generateUserContent(this.attrs, this.attrs.fetch);\n    view += userHTML(this.user);\n    this.shadowRoot.innerHTML = view;\n    if (this.attrs.theme) {\n      this.setAttribute('data-theme', this.attrs.theme);\n    }\n  }\n  \n}\ncustomElements.define('devto-user', DevtoUser);"],"names":["getElements","canvasElement","screen","shadowWithin","container","mainLink","avatar","latest_post","popular_post","postList","terms","term","ensureElements","elements","args","expect","formatDate","cov_2ogjjjooci","path","hash","global","gcv","coverageData","coverage","actualCoverage","DevtoUser","HTMLElement","constructor","f","s","attrs","attachShadow","mode","_getAttributes","name","getAttributeNames","getAttribute","b","connectedCallback","view","styles","user","generateUserContent","fetch","userHTML","shadowRoot","innerHTML","theme","setAttribute","customElements","define"],"mappings":"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EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,geAAA,CAAA,QAAA,EAAA,QAAA,CAAA,iFAAA,EAAA,MAAA,CAAA,EAAA,SAAA,0mWAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAAD,OAAAA,EAAA,UAAA,CAAA,OAAAO,CAAA,EAAAA,CAAAP,CAAAA,IAgBC,MAAAQ,WAAkBC,WAAY,CAIzCC,aAAc,CAAAV,IAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAY,EAAA,CAAA,IACZ,MAAK,EAAGZ,EAAA,EAAAY,OACR,KAAKC,MAAQ,CAAA,EAAGb,EAAA,EAAAY,EAAA,CAAA,IAChB,KAAKE,aAAa,CAAEC,KAAM,MAAO,CAAC,EAAEf,EAAAY,EAAAA,EACpC,CAAA,IAAA,KAAKI,eAAc,CACrB,CAMAA,gBAAiB,CAAAhB,EAAAW,EAAAA,OAAAX,EAAA,EAAAY,EACf,CAAA,IAAA,QAASK,KAAY,KAACC,kBAAmB,EAAElB,EAAA,EAAAY,EAAA,CAAA,IACrC,KAAKO,aAAaF,CAAI,GAAGjB,EAAA,EAAAoB,UAAApB,EAAA,EAAAY,EAC3B,CAAA,IAAA,KAAKC,MAAMI,CAAI,EAAI,KAAKE,aAAaF,CAAI,GAC1CjB,EAAA,EAAAoB,SAEL,CAEA,MAAMC,mBAAoB,CAAArB,EAAAW,EAAAA,OACxB,IAAIW,GAAItB,EAAA,EAAAY,EAAA,CAAA,IAAI,UAASW,EAAO,YAAUvB,EAAA,EAAAY,EACtC,CAAA,IAAA,KAAKY,KAAO,MAAMC,EAAoB,KAAKZ,MAAO,KAAKA,MAAMa,KAAK,EAAE1B,EAAA,EAAAY,OACpEU,GAAQK,EAAS,KAAKH,IAAI,EAAExB,EAAA,EAAAY,EAC5B,EAAA,IAAA,KAAKgB,WAAWC,UAAYP,EAAKtB,EAAA,EAAAY,EACjC,EAAA,IAAI,KAAKC,MAAMiB,OAAO9B,EAAA,EAAAoB,EAAApB,CAAAA,EAAAA,CAAAA,IAAAA,IAAAY,EAAA,EAAA,IACpB,KAAKmB,aAAa,aAAc,KAAKlB,MAAMiB,KAAK,GACjD9B,EAAAoB,EAAAA,SACH,CAEF,CAACpB,EAAA,EAAAY,QACDoB,eAAeC,OAAO,aAAczB,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}