{"version":3,"file":"post.stories-7103ceee.js","sources":["../../src/devto/post/post.shared-spec.js","../../src/devto/post/index.js"],"sourcesContent":["import { expect } from '@storybook/jest';\nimport { within as shadowWithin } from 'shadow-dom-testing-library';\n\n/**\n * Extract elements from an shadow DOM element\n */\nexport const getElements = async (canvasElement) => {\n  const screen = shadowWithin(canvasElement);\n  const container = await screen.findByShadowLabelText(/dev.to article/i);\n  const link = await screen.queryByShadowRole('link');\n  const image = await screen.queryByShadowRole('img');\n  const title = await container?.querySelector('[itemprop=\"name\"]');\n  return { \n    screen,\n    canvasElement,\n    container,\n    link,\n    image,\n    title,\n    error: await container?.querySelector('[itemprop=\"error\"]'),\n  };\n}\n\n/**\n * Ensure elements are present and have the correct content\n */\nexport const ensureElements = async (elements, args) => {\n  await expect(elements.container).toBeTruthy();\n\n  if (args.fetch && !args.id) {\n    await expect(elements.link).toBeFalsy();\n    await expect(elements.container).toHaveTextContent('Post ID is required to fetch post content');\n  }\n  if (args.error) {\n    await expect(elements.link).toBeFalsy();\n    await expect(elements.error).toBeTruthy();\n    await expect(elements.error).toHaveTextContent(args.error);\n    return;\n  }\n\n  await expect(elements.link).toBeTruthy();\n  await expect(elements.link).toHaveAttribute('href', args.url);\n  await expect(elements.title).toBeTruthy();\n  await expect(elements.title).toHaveTextContent(args.title);\n  await expect(elements.image).toBeTruthy();\n  await expect(elements.image).toHaveAttribute('src', args.cover_image);\n}","import { generatePostContent } from './content.js';\nimport postHTML from './html.js';\nimport { styles } from '../styles/index.js';\n\n/**\n * dev.to post web component\n * @summary Native web component which shows a dev.to (or forem.dev) post. Can use local data,\n *  fetch data from the dev.to API, or use a combination of both.\n * @element devto-post\n * @name DevtoPost\n * @module\n * \n * @property {number} id - Post ID\n * @property {string} title - Post title\n * @property {string} url - Post URL\n * @property {string} cover_image - Post cover image URL\n * @property {string} social_image - Post social image URL\n * @property {boolean} [fetch] - when true, fetches post from the [Forem API](https://developers.forem.com/api/v0#tag/articles/operation/getArticleById)\n * \n * @example\n * <!-- import the web component -->\n * <script type=\"module\" src=\"https://unpkg.com/profile-components/dist/devto-post.js\"></script>\n * \n * <!-- use the custom element -->\n * <devto-post id=\"123456\" fetch=\"true\"></devto-post>\n */\nexport class DevtoPost extends HTMLElement {\n  /**\n   * @ignore\n   */\n  constructor() {\n    super();\n    this.attrs = {};\n    this.attachShadow({ mode: \"open\" });\n    this._getAttributes();\n  }\n\n  /**\n   * Generate variables at `this.[attribute-name]` for each attribute on the element\n   * @ignore\n   */\n  _getAttributes() {\n    for (let name of this.getAttributeNames()) {\n      if (this.getAttribute(name)) {\n        this.attrs[name] = this.getAttribute(name);\n      }\n    }\n  }\n\n  async connectedCallback() {\n    let view = `<style>${styles}</style>`;\n    this.post = await generatePostContent(this.attrs, this.attrs.fetch);\n    view += postHTML(this.post);\n    this.shadowRoot.innerHTML = view;\n    if (this.attrs.itemprop) {\n      this.setAttribute('itemprop', this.attrs.itemprop);\n    }\n  }\n}\ncustomElements.define('devto-post', DevtoPost);"],"names":["getElements","canvasElement","screen","shadowWithin","container","link","image","title","ensureElements","elements","args","expect","cov_208xdbea98","path","hash","global","gcv","coverageData","coverage","actualCoverage","DevtoPost","HTMLElement","constructor","f","s","attrs","attachShadow","mode","_getAttributes","name","getAttributeNames","getAttribute","b","connectedCallback","view","styles","post","generatePostContent","fetch","postHTML","shadowRoot","innerHTML","itemprop","setAttribute","customElements","define"],"mappingsigCAMaA,EAAc,MAAOC,GAAkB,CAClD,MAAMC,EAASC,EAAaF,CAAa,EACnCG,EAAY,MAAMF,EAAO,sBAAsB,iBAAiB,EAChEG,EAAO,MAAMH,EAAO,kBAAkB,MAAM,EAC5CI,EAAQ,MAAMJ,EAAO,kBAAkB,KAAK,EAC5CK,EAAQ,MAAMH,GAAA,YAAAA,EAAW,cAAc,sBAC7C,MAAO,CACL,OAAAF,EACA,cAAAD,EACA,UAAAG,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,MAAO,MAAMH,GAAA,YAAAA,EAAW,cAAc,sBAC1C,CACA,EAKaI,EAAiB,MAAOC,EAAUC,IAAS,CAOtD,GANA,MAAMC,EAAOF,EAAS,SAAS,EAAE,WAAU,EAEvCC,EAAK,OAAS,CAACA,EAAK,KACtB,MAAMC,EAAOF,EAAS,IAAI,EAAE,UAAS,EACrC,MAAME,EAAOF,EAAS,SAAS,EAAE,kBAAkB,2CAA2C,GAE5FC,EAAK,MAAO,CACd,MAAMC,EAAOF,EAAS,IAAI,EAAE,UAAS,EACrC,MAAME,EAAOF,EAAS,KAAK,EAAE,WAAU,EACvC,MAAME,EAAOF,EAAS,KAAK,EAAE,kBAAkBC,EAAK,KAAK,EACzD,MACD,CAED,MAAMC,EAAOF,EAAS,IAAI,EAAE,WAAU,EACtC,MAAME,EAAOF,EAAS,IAAI,EAAE,gBAAgB,OAAQC,EAAK,GAAG,EAC5D,MAAMC,EAAOF,EAAS,KAAK,EAAE,WAAU,EACvC,MAAME,EAAOF,EAAS,KAAK,EAAE,kBAAkBC,EAAK,KAAK,EACzD,MAAMC,EAAOF,EAAS,KAAK,EAAE,WAAU,EACvC,MAAME,EAAOF,EAAS,KAAK,EAAE,gBAAgB,MAAOC,EAAK,WAAW,CACtE,EC/BY,SAAAE,GAAA,CAAA,IAAAC,EAAA,kFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,kFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,geAAA,CAAA,QAAA,EAAA,QAAA,CAAA,iFAAA,EAAA,MAAA,CAAA,EAAA,SAAA,wnSAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAAD,OAAAA,EAAA,UAAA,CAAA,OAAAO,CAAA,EAAAA,CAAAP,CAAAA,IAWC,MAAAQ,WAAkBC,WAAY,CAIzCC,aAAc,CAAAV,IAAAW,EAAA,CAAA,IAAAX,EAAA,EAAAY,EAAA,CAAA,IACZ,MAAK,EAAGZ,EAAA,EAAAY,OACR,KAAKC,MAAQ,CAAA,EAAGb,EAAA,EAAAY,EAAA,CAAA,IAChB,KAAKE,aAAa,CAAEC,KAAM,MAAO,CAAC,EAAEf,EAAAY,EAAAA,EACpC,CAAA,IAAA,KAAKI,eAAc,CACrB,CAMAA,gBAAiB,CAAAhB,EAAAW,EAAAA,OAAAX,EAAA,EAAAY,EACf,CAAA,IAAA,QAASK,KAAY,KAACC,kBAAmB,EAAElB,EAAA,EAAAY,EAAA,CAAA,IACrC,KAAKO,aAAaF,CAAI,GAAGjB,EAAA,EAAAoB,UAAApB,EAAA,EAAAY,EAC3B,CAAA,IAAA,KAAKC,MAAMI,CAAI,EAAI,KAAKE,aAAaF,CAAI,GAC1CjB,EAAA,EAAAoB,SAEL,CAEA,MAAMC,mBAAoB,CAAArB,EAAAW,EAAAA,OACxB,IAAIW,GAAItB,EAAA,EAAAY,EAAA,CAAA,IAAI,UAASW,CAAO,YAAUvB,EAAA,EAAAY,EACtC,CAAA,IAAA,KAAKY,KAAO,MAAMC,EAAoB,KAAKZ,MAAO,KAAKA,MAAMa,KAAK,EAAE1B,EAAA,EAAAY,OACpEU,GAAQK,EAAS,KAAKH,IAAI,EAAExB,EAAA,EAAAY,EAC5B,EAAA,IAAA,KAAKgB,WAAWC,UAAYP,EAAKtB,EAAA,EAAAY,EACjC,EAAA,IAAI,KAAKC,MAAMiB,UAAU9B,EAAA,EAAAoB,EAAApB,CAAAA,EAAAA,CAAAA,IAAAA,IAAAY,EAAA,EAAA,IACvB,KAAKmB,aAAa,WAAY,KAAKlB,MAAMiB,QAAQ,GAClD9B,EAAAoB,EAAAA,SACH,CACF,CAACpB,EAAA,EAAAY,QACDoB,eAAeC,OAAO,aAAczB,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}